# config/passport.js
# load all the things we need
FacebookStrategy = require('passport-facebook').Strategy
# load up the user model
User = require('../models/user')
# load the auth variables
configAuth = require('./auth')
util = require 'util'

module.exports = (passport) ->
  # used to serialize the user for the session
  passport.serializeUser (user, done) ->
    done null, user.id
    return
  # used to deserialize the user
  passport.deserializeUser (id, done) ->
    User.findById id, (err, user) ->
      done err, user
      return
    return
  # =========================================================================
  # FACEBOOK ================================================================
  # =========================================================================

  ###passport.use(new FacebookStrategy({

  	// pull in our app id and secret from our auth.js file
  	clientID        : configAuth.facebookAuth.clientID,
  	clientSecret    : configAuth.facebookAuth.clientSecret,
  	callbackURL     : configAuth.facebookAuth.callbackURL

  },
  ###

  passport.use new FacebookStrategy({
    clientID: configAuth.facebookAuth.clientID
    clientSecret: configAuth.facebookAuth.clientSecret
    callbackURL: configAuth.facebookAuth.callbackURL
    profileFields: [
      'id'
      'emails'
      'name'
      'gender'
      'picture.type(large)'
    ]
  }, (token, refreshToken, profile, done) ->
    # asynchronous
    process.nextTick ->
      # find the user in the database based on their facebook id
      User.findOne { 'facebook.id': profile.id }, (err, user) ->
        # if there is an error, stop everything and return that
        # ie an error connecting to the database
        if err
          return done(err)
        # if the user is found, then log them in
        if user
          return done(null, user)
          # user found, return that user
        else
          # if there is no user found with that facebook id, create them
          newUser = new User
          # set all of the facebook information in our user model
          newUser.facebook.id = profile.id
          newUser.facebook.photos = profile.photos
          # set the users facebook id
          newUser.facebook.token = token
          # we will save the token that facebook provides to the user
          newUser.facebook.full_name = profile._json.first_name + ' ' + profile._json.last_name
          # look at the passport user profile to see how names are returned
          newUser.facebook.first_name = profile._json.first_name
          newUser.facebook.last_name = profile._json.last_name
          # look at the passport user profile to see how names are returned
          newUser.facebook.email = profile._json.email
          newUser.status = 'active'
          # facebook can return multiple emails so we'll take the first
          # save our user to the database
          newUser.save (err) ->
            if err
              throw err
            # if successful, return the new user
            done null, newUser
        return
      return
    return
)
  return

# ---
# generated by js2coffee 2.2.0